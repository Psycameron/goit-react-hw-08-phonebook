"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[549],{6549:function(n,e,t){t.r(e),t.d(e,{default:function(){return Q}});var i,o,a,r=t(168),d=t(7691),s=d.ZP.h2(i||(i=(0,r.Z)(["\n  margin-top: 20px;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.15;\n  font-weight: 700;\n  letter-spacing: 0.03em;\n  text-align: center;\n"]))),c=t(184),l=function(n){var e=n.title,t=n.children;return(0,c.jsxs)("section",{children:[(0,c.jsx)(s,{children:e}),t]})},p=d.ZP.label(o||(o=(0,r.Z)(["\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n"]))),f=d.ZP.input(a||(a=(0,r.Z)(["\n  width: 95%;\n  display: flex;\n  border: 2px solid black;\n  margin: 10px auto;\n  padding: 15px;\n  font-size: 20px;\n  &:focus-visible {\n    border-radius: 4px;\n    border: 3px solid lightblue;\n  }\n"]))),x=t(2007),u=t.n(x),h=t(9434),g=t(4808),m=function(){var n=(0,h.I0)();return(0,c.jsx)(p,{children:(0,c.jsx)(f,{type:"text",name:"filter",placeholder:"Find contacts by name",onChange:function(e){n((0,g.s)(e.currentTarget.value))}})})};p.propTypes={filter:u().string};var b,y,Z,v,j,w,k,z,P,C,_=t(5705),A=t(8007),S=(0,d.ZP)(_.l0)(b||(b=(0,r.Z)(["\n  padding: 15px 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n"]))),I=(d.ZP.div(y||(y=(0,r.Z)(["\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n"]))),(0,d.ZP)(_.Bc)(Z||(Z=(0,r.Z)(["\n  color: tomato;\n"])))),L=d.ZP.label(v||(v=(0,r.Z)(["\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n"]))),T=(0,d.ZP)(_.gN)(j||(j=(0,r.Z)(["\n  all: unset;\n  display: flex;\n  border: 2px solid black;\n  margin: 10px 0;\n  padding: 15px;\n  font-size: 20px;\n  &:focus-visible {\n    border-radius: 4px;\n    border: 3px solid lightblue;\n  }\n"]))),q=d.ZP.button(w||(w=(0,r.Z)(["\n  box-shadow: inset 0px 0px 12px 3px #ffffff;\n  background: linear-gradient(to bottom, #ededed 5%, #dfdfdf 100%);\n  background-color: #ededed;\n  border-radius: 4px;\n  border: 2px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #212121;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 37px;\n  text-decoration: none;\n  margin: 10px 0;\n  &:hover {\n    background: linear-gradient(to bottom, #212121 5%, #ededed 100%);\n    background-color: #212121;\n    color: #ffffff;\n  }\n"]))),R=RegExp(/^((\\+[1-9]{1,4}[ \\-]*)|(\\([0-9]{1,3}\\)[ \\-]*)|([0-9]{1,4})[ \\-]*)*?[0-9]{1,4}?[ \\-]*[0-9]{1,9}?$/),F=A.Ry().shape({name:A.Z_().required().matches("^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$","Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"),phone:A.Z_().required().matches(R,"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +")}),G={name:"",phone:""},N=function(n){var e=n.handleSubmit;return(0,c.jsx)(_.J9,{initialValues:G,onSubmit:e,validationSchema:F,children:(0,c.jsxs)(S,{autoComplete:"off",children:[(0,c.jsxs)(L,{children:["Name",(0,c.jsx)(T,{type:"text",name:"name"}),(0,c.jsx)(I,{component:"div",name:"name"})]}),(0,c.jsxs)(L,{children:["Number",(0,c.jsx)(T,{type:"tel",name:"phone"}),(0,c.jsx)(I,{component:"div",name:"phone"})]}),(0,c.jsx)(q,{type:"submit",children:"Add contact"})]})})},V=d.ZP.div(k||(k=(0,r.Z)(["\n  margin: 0 auto;\n  padding: 0 15px;\n"]))),U=function(n){return n.phonebook.contacts.items},B=function(n){return n.phonebook.contacts.isLoading},E=function(n){return n.phonebook.contacts.error},J=function(n){var e=U(n),t=function(n){return n.filter}(n);return e.filter((function(n){return n.name.toLowerCase().includes(t.toLowerCase())}))},K=t(3634),$=t(2791),D=d.ZP.ul(z||(z=(0,r.Z)(["\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n"]))),M=d.ZP.li(P||(P=(0,r.Z)(["\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 16px;\n  line-height: 1.15;\n  padding: 10px 0;\n  letter-spacing: 0.05em;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding-left: 32px;\n    padding-right: 32px;\n    font-size: 25px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-left: 40px;\n    padding-right: 40px;\n    font-size: 32px;\n  }\n"]))),O=d.ZP.button(C||(C=(0,r.Z)(["\n  box-shadow: inset 0px 0px 12px 3px #ffffff;\n  background: linear-gradient(to bottom, #ededed 5%, #dfdfdf 100%);\n  background-color: #ededed;\n  border-radius: 4px;\n  border: 2px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #212121;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 16px;\n  text-decoration: none;\n  &:hover {\n    background: linear-gradient(to bottom, #212121 5%, #ededed 100%);\n    background-color: #212121;\n    color: #ffffff;\n  }\n"]))),H=function(n){var e=n.contacts,t=(0,h.I0)();return(0,c.jsx)(D,{children:e.map((function(n){var e=n.id,i=n.name,o=n.number;return(0,c.jsxs)(M,{children:[i,": ",o,(0,c.jsx)(O,{type:"button",onClick:function(){return t((0,K.GK)(e))},children:"Delete"})]},e)}))})};function Q(){var n=(0,h.I0)(),e=(0,h.v9)(U),t=(0,h.v9)(B),i=(0,h.v9)(E),o=(0,h.v9)(J);return(0,$.useEffect)((function(){n((0,K.yF)())}),[n]),(0,c.jsxs)(V,{children:[(0,c.jsx)(N,{handleSubmit:function(t,i){var o,a=i.resetForm;o=t,e.find((function(n){return n.name.toLowerCase()===o.name.toLowerCase()}))?alert("".concat(o.name," is already in contacts")):n((0,K.uK)(o)),a()}}),(0,c.jsx)(m,{}),(0,c.jsxs)(l,{title:"Contacts list",children:[t&&(0,c.jsx)("p",{children:"Loading contacts..."}),i&&(0,c.jsx)("p",{children:i}),e.length>0&&(0,c.jsx)(H,{contacts:o})]})]})}D.propTypes={contacts:u().arrayOf(u().exact({id:u().string.isRequired,name:u().string.isRequired,phone:u().number.isRequired}))}}}]);
//# sourceMappingURL=549.a7bd1823.chunk.js.map