{"version":3,"file":"static/js/549.a7bd1823.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/App.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.15;\n  font-weight: 700;\n  letter-spacing: 0.03em;\n  text-align: center;\n`;\n","import { Title } from './Section.styled';\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n`;\n\nexport const FindInput = styled.input`\n  width: 95%;\n  display: flex;\n  border: 2px solid black;\n  margin: 10px auto;\n  padding: 15px;\n  font-size: 20px;\n  &:focus-visible {\n    border-radius: 4px;\n    border: 3px solid lightblue;\n  }\n`;","import { Label, FindInput } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterChange } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onWrite = e => {\n    dispatch(filterChange(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      <FindInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        onChange={onWrite}\n      />\n    </Label>\n  );\n};\n\nLabel.propTypes = {\n  filter: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormContact = styled(Form)`\n  padding: 15px 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: tomato;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n`;\n\nexport const Input = styled(Field)`\n  all: unset;\n  display: flex;\n  border: 2px solid black;\n  margin: 10px 0;\n  padding: 15px;\n  font-size: 20px;\n  &:focus-visible {\n    border-radius: 4px;\n    border: 3px solid lightblue;\n  }\n`;\n\nexport const Button = styled.button`\n  box-shadow: inset 0px 0px 12px 3px #ffffff;\n  background: linear-gradient(to bottom, #ededed 5%, #dfdfdf 100%);\n  background-color: #ededed;\n  border-radius: 4px;\n  border: 2px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #212121;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 37px;\n  text-decoration: none;\n  margin: 10px 0;\n  &:hover {\n    background: linear-gradient(to bottom, #212121 5%, #ededed 100%);\n    background-color: #212121;\n    color: #ffffff;\n  }\n`;","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormContact,\n  Label,\n  Input,\n  Button,\n  ErrorText,\n} from './ContactForm.styled.js';\n\nconst nameValidate =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst phoneValidate = RegExp(\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{1,3}\\\\)[ \\\\-]*)|([0-9]{1,4})[ \\\\-]*)*?[0-9]{1,4}?[ \\\\-]*[0-9]{1,9}?$/\n);\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required()\n    .matches(\n      nameValidate,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  phone: yup\n    .string()\n    .required()\n    .matches(\n      phoneValidate,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nexport const ContactForm = ({ handleSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormContact autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\"></Input>\n          <ErrorText component=\"div\" name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"phone\"></Input>\n          <ErrorText component=\"div\" name=\"phone\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContact>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  margin: 0 auto;\n  padding: 0 15px;\n`;\n","export const selectContacts = state => state.phonebook.contacts.items;\nexport const selectisLoading = state => state.phonebook.contacts.isLoading;\nexport const selectError = state => state.phonebook.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 16px;\n  line-height: 1.15;\n  padding: 10px 0;\n  letter-spacing: 0.05em;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding-left: 32px;\n    padding-right: 32px;\n    font-size: 25px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-left: 40px;\n    padding-right: 40px;\n    font-size: 32px;\n  }\n`;\n\nexport const Button = styled.button`\n  box-shadow: inset 0px 0px 12px 3px #ffffff;\n  background: linear-gradient(to bottom, #ededed 5%, #dfdfdf 100%);\n  background-color: #ededed;\n  border-radius: 4px;\n  border: 2px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #212121;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 16px;\n  text-decoration: none;\n  &:hover {\n    background: linear-gradient(to bottom, #212121 5%, #ededed 100%);\n    background-color: #212121;\n    color: #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, List, Item } from './ContactList.styled';\n\nexport const ContactsList = ({ contacts }) => {\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { Section } from '../components/Section/Section';\nimport { Filter } from '../components/Filter/Filter';\n\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Wrap } from '../components/App.styled';\n//\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectisLoading,\n  selectError,\n  selectFilteredContacts,\n} from '../redux/contacts/selectors';\nimport { fetchContacts, addContact } from '../redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { ContactsList } from 'components/ContactList/ContactList';\n//\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectisLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilteredContacts);\n\n  const newContact = name => {\n    contacts.find(\n      contact => contact.name.toLowerCase() === name.name.toLowerCase()\n    )\n      ? alert(`${name.name} is already in contacts`)\n      : dispatch(addContact(name));\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    newContact(values);\n    resetForm();\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrap>\n      <ContactForm handleSubmit={handleSubmit} />\n      <Filter />\n      <Section title={`Contacts list`}>\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        {contacts.length > 0 && <ContactsList contacts={filter} />}\n      </Section>\n    </Wrap>\n  );\n}\n"],"names":["Title","styled","Section","title","children","Label","FindInput","Filter","dispatch","useDispatch","type","name","placeholder","onChange","e","filterChange","currentTarget","value","propTypes","filter","PropTypes","FormContact","Form","ErrorText","ErrorMessage","Input","Field","Button","phoneValidate","RegExp","schema","yup","shape","required","matches","phone","initialValues","ContactForm","handleSubmit","onSubmit","validationSchema","autoComplete","component","Wrap","selectContacts","state","phonebook","contacts","items","selectisLoading","isLoading","selectError","error","selectFilteredContacts","selectFilter","contact","toLowerCase","includes","List","Item","ContactsList","map","id","number","onClick","deleteContact","App","useSelector","useEffect","fetchContacts","values","resetForm","find","alert","addContact","length"],"sourceRoot":""}